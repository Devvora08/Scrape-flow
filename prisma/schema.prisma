// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Worflow {                                       // unable to change spelling error, go with it now
  id String @id @default(cuid())
  userId String 
  name String
  description String?

  defination String
  executionPlan String?
  creditsCost Int @default(0)
  status String 

  cron String? 

  lastRunAt DateTime?
  lastRunId String?
  lastRunStatus String?
  nextRunAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  executions WorkflowExecution[]

  // User cannot have 2 workflows with same name
  @@unique([name, userId])
}

model WorkflowExecution {
  id String @id @default(cuid())
  workflowId String
  userId String
  trigger String
  status String
  defination String @default("{}")
  createdAt DateTime @default(now())
  startedAt DateTime?
  completedAt DateTime?
  
  creditsConsumed Int @default(0)

  phases ExecutionPhase[]
  workflow Worflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)
}

model ExecutionPhase {
  id String @id @default(cuid())
  userId String
  status String
  number Int
  node String
  name String
  startedAt DateTime?
  completedAt DateTime?
  inputs String?
  outputs String?

  creditsConsumed Int?

  workflowExecutionId String

  execution WorkflowExecution @relation(fields: [workflowExecutionId], references: [id], onDelete:Cascade)

  logs ExecutionLog[]
}

model ExecutionLog {
  id String @id @default(cuid())
  logLevel String
  message String
  timestamp DateTime @default(now())

  executionPhaseId String
  
  executionPhase ExecutionPhase @relation(fields: [executionPhaseId], references: [id], onDelete: Cascade)
}

model UserBalance {
  userId String @id
  credits Int  @default(0)
}

model Credential {
  id String @id @default(cuid())
  userId String
  name String
  value String

  createdAt DateTime @default(now())

  @@unique([userId, name])
}

model UserPurchase {
  id String @id @default(cuid())
  userId String
  stripeId String
  description String
  amount Int
  currency String
  date DateTime @default(now())
}